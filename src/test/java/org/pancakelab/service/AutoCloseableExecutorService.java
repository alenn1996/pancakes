package org.pancakelab.service;import java.util.concurrent.ExecutorService;import java.util.concurrent.TimeUnit;class AutoCloseableExecutorService implements AutoCloseable {    private final ExecutorService executor;    public AutoCloseableExecutorService(ExecutorService executor) {        this.executor = executor;    }    public ExecutorService get() {        return executor;    }    @Override    public void close() {        executor.shutdown();        try {            if (!executor.awaitTermination(5, TimeUnit.SECONDS)) {                throw new IllegalStateException("Executor did not shut down in time");            }        } catch (InterruptedException e) {            Thread.currentThread().interrupt();            throw new RuntimeException("Executor shutdown interrupted", e);        }    }}